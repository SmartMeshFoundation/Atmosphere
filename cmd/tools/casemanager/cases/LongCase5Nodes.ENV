[COMMON]
case_name=LongCase5Nodes
registry_contract_address=new
debug = true

[TOKEN]
T0=new

[NODE]
N0=0x3DE45fEbBD988b6E417E4Ebd2C69E42630FeFBF0,127.0.0.1:6000
N1=0x97251dDfE70ea44be0E5156C4E3AaDD30328C6a5,127.0.0.1:6001
N2=0x2b0C1545DBBEC6BFe7B26c699b74EB3513e52724,127.0.0.1:6002
N3=0xaaAA7F676a677c0B3C8E4Bb14aEC7Be61365acfE,127.0.0.1:6003
N4=0xd8a595483B88DfC470B6C57084648B369a50FA7C,127.0.0.1:6004

[CHANNEL]

[DESCRIPTION]
# 1	    Start 5 Raiden nodes
# 2	    Create the following channels: N0 - N1, N1 - N2, N2 - N3 with 0 deposit
# 3	    N0 N1 N2 N3 make a deposit of 100 to their channels
# 4	    N4 tries to make a deposit to a channel that does not exist (fail channel with N3 does not exist)
# 5	    N1 makes a deposit of 50 tokens on both of his channels (skip)
# 6	    N1 tries to open a channel with N0, but it already has a channel (fail)
# 7	    N2 opens a channel with N4 (0 tokens)
# 8	    N2 makes a deposit of 100 tokens
# 9	    N2 tries to deposit 30 tokens (skip)
# 10	N2 deposits 50 tokens to the channel (N2 - N4)
# 11	N0 tries to open a channel with an initial deposit that is bigger then the Red Eyes Limit (skip)
# 12	N0 opens a channel with N4 (initial deposit of 10)
# 13	N4 deposits 25 tokens to N0<->N4 channel
# 14	N0 performs a payment to N4 of 50 tokens (path N0<->N1<->N2<->N4)
# 15	N2 sends all of its tokens to N1 (one transfer)
# 16	N2 tries to send another > 25 tokens payment to N1 (fail no route with enough capacity)
# 17	N2 sends 10 payments of 1 token to N1 by using the N2 <-> N4 <-> N0 <-> N1 route
# 18	N1 shuts down
# 19	N0 sends 10 tokens to N2 (using the N0<-> N4 <-> N2 route)
# 20	N0 tries to open a channel with N1 (fail - it already has a channel with N1)
# 21	N0 tries to make a payment to N1 (Node is offline - fails)
# 22	N1 is back online
# 23	N3 sends all 100 tokens to N2 on payments of 1 token/each.
# 24	N0 deposits 160 tokens on his channel with N1
# 25	Assert that route N0->N1->N2->N3 has enough capacity to send 200 tokens from N0 to N3
# 26	Perform 200 payments From N0 to N3
# 27	Assert
# 28	N4 closes his channel with N2
# 29	N2 tries to make a deposit in the channel that is being closed (fail 409)
# 30	N2 sends 10 tokens to N1
# 31	N1 sends 10 tokens to N0
# 32	N4 sends 10 tokens to N2 (N0 -> N1-> N2)
# 33	settle all channel